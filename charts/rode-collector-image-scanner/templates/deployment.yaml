apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rode-collector-image-scanner.fullname" . }}
  labels:
    {{- include "rode-collector-image-scanner.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "rode-collector-image-scanner.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "rode-collector-image-scanner.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.dockerConfigSecret }}
      volumes:
        - name: docker-config
          projected:
            sources:
              - secret:
                  name: {{ .Values.dockerConfigSecret }}
                  items:
                    - key: .dockerconfigjson
                      path: config.json
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default (printf "v%s" ($.Chart.AppVersion) ) }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--port={{ .Values.service.port }}"
            - "--rode-host={{ .Values.rode.host }}"
            {{- if .Values.rode.auth.proxy.enabled }}
            - "--proxy-auth"
            {{- end }}
            - "--rode-insecure-disable-transport-security={{ .Values.rode.disableTransportSecurity }}"
            - "--debug={{ .Values.debug }}"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.dockerConfigSecret }}
          volumeMounts:
            - name: docker-config
              mountPath: /home/nonroot/.docker
          {{- end }}
          readinessProbe:
            exec:
              command: ["/grpc_health_probe", "-addr=:{{ .Values.service.port }}"]
            initialDelaySeconds: 5
          livenessProbe:
            exec:
              command: ["/grpc_health_probe", "-addr=:{{ .Values.service.port }}"]
            initialDelaySeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: trivy-server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.trivy.image.repository }}:{{ .Values.trivy.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "server"
            - "--listen"
            - "0.0.0.0:{{ .Values.trivy.port }}"
          ports:
            - name: http
              containerPort: {{ .Values.trivy.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.trivy.port }}
            initialDelaySeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.trivy.port }}
            initialDelaySeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
