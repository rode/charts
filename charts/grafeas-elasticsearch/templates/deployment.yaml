apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "grafeas.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "grafeas.name" . }}
    helm.sh/chart: {{ include "grafeas.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "grafeas.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "grafeas.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: wait-for-elasticsearch
          image: curlimages/curl:7.73.0
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
            - "-c"
            - |
              until curl --output /dev/null --silent --fail --max-time 2 {{ .Values.grafeas.elasticsearch.url }}/_cluster/health?wait_for_status=yellow; do sleep 1; done;
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/grafeas-server"]
          args: ["--config=/etc/config/config.yaml"]
          ports:
            - name: grafeas
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          volumeMounts:
          - name: config-volume
            mountPath: /etc/config
{{- if eq .Values.certificates.enabled true }}
          - name: certificates
            mountPath: /certificates
{{- end }}
{{- if .Values.persistence.enabled }}
{{- if eq .Values.persistence.storageType "embedded" }}
          - name: persistent-volume
            mountPath: /data
{{- end }}
{{- end }}
          resources:
{{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
             tcpSocket:
               port: grafeas
             initialDelaySeconds: {{ .Values.livenessprobe.initialDelaySeconds }}
             periodSeconds: {{ .Values.livenessprobe.periodSeconds }}
             failureThreshold: {{ .Values.livenessprobe.failureThreshold }}
          readinessProbe:
             tcpSocket:
               port: grafeas
             initialDelaySeconds: {{ .Values.readinessprobe.initialDelaySeconds }}
             periodSeconds: {{ .Values.readinessprobe.periodSeconds }}
             failureThreshold: {{ .Values.readinessprobe.failureThreshold }}
      volumes:
        - name: config-volume
          configMap:
            name: grafeas
            items:
            - key: config
              path: config.yaml
{{- if .Values.certificates.enabled }}
        - name: certificates
          secret:
            secretName: {{ .Values.certificates.name }}
{{- end }}
{{- if .Values.persistence.enabled }}
{{- if eq .Values.persistence.storageType "embedded" }}
        - name: persistent-volume
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.claimName }}
{{- end}}
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
